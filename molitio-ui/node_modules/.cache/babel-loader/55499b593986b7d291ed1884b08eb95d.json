{"ast":null,"code":"var _jsxFileName = \"/Users/vycos-zen/git/molitio-workspace/molitio-ui/src/components/Navigation.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navigation() {\n  _s();\n\n  const useStyles = makeStyles(theme => createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    list: {\n      width: 250\n    },\n    fullList: {\n      width: \"auto\"\n    }\n  }));\n  const classes = useStyles();\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [\"All mail\", \"Trash\", \"Spam\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            className: classes.menuButton,\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: \"molitio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"left\", \"right\", \"top\", \"bottom\"].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleDrawer(anchor, true),\n          children: anchor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: anchor,\n          open: state[anchor],\n          onClose: toggleDrawer(anchor, false),\n          children: list(anchor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, anchor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Navigation, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navigation;\nexport default Navigation;\n/* \n<button mat-button [matMenuTriggerFor]=\"menu\">\n<mat-icon aria-hidden=\"false\" aria-label=\"menu\">\n    menu\n</mat-icon>\n</button>\n<mat-menu #menu=\"matMenu\">\n<button mat-menu-item>\n    <a routerLink=\"/mission-board\">mission board</a>\n</button>\n<button mat-menu-item>\n    <a routerLink=\"/about\">about</a>\n</button>\n<button mat-menu-item>\n    <a routerLink=\"/community-hub\">community hub</a>\n</button>\n<button mat-menu-item>\n    <a routerLink=\"/resource-management\">resource management</a>\n</button>\n</mat-menu> */\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/vycos-zen/git/molitio-workspace/molitio-ui/src/components/Navigation.tsx"],"names":["React","createStyles","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","clsx","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Navigation","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","classes","toggleDrawer","anchor","open","event","type","key","setState","state","map","text","index"],"mappings":"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","sourcesContent":["import React, { useState, MouseEvent } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nfunction Navigation() {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        flexGrow: 1,\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      title: {\n        flexGrow: 1,\n      },\n      list: {\n        width: 250,\n      },\n      fullList: {\n        width: \"auto\",\n      },\n    })\n  );\n  const classes = useStyles();\n\n  const toggleDrawer = (anchor: Anchor, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === \"keydown\" &&\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\n        (event as React.KeyboardEvent).key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor: Anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              molitio\n            </Typography>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <div>\n        {([\"left\", \"right\", \"top\", \"bottom\"] as Anchor[]).map((anchor) => (\n          <React.Fragment key={anchor}>\n            <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n            <Drawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n            >\n              {list(anchor)}\n            </Drawer>\n          </React.Fragment>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Navigation;\n/* \n<button mat-button [matMenuTriggerFor]=\"menu\">\n<mat-icon aria-hidden=\"false\" aria-label=\"menu\">\n    menu\n</mat-icon>\n</button>\n<mat-menu #menu=\"matMenu\">\n<button mat-menu-item>\n    <a routerLink=\"/mission-board\">mission board</a>\n</button>\n<button mat-menu-item>\n    <a routerLink=\"/about\">about</a>\n</button>\n<button mat-menu-item>\n    <a routerLink=\"/community-hub\">community hub</a>\n</button>\n<button mat-menu-item>\n    <a routerLink=\"/resource-management\">resource management</a>\n</button>\n</mat-menu> */\n"]},"metadata":{},"sourceType":"module"}