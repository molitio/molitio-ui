{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCTopAppBarFoundation, MDCFixedTopAppBarFoundation, MDCShortTopAppBarFoundation } from '@material/top-app-bar';\nexport var useTopAppBarFoundation = function (props) {\n  var scrollTargetRef = useRef(null);\n  var navIconRef = useRef(null);\n\n  var _a = useFoundation({\n    props: props,\n    elements: {\n      rootEl: true\n    },\n    foundation: function (_a) {\n      var rootEl = _a.rootEl,\n          emit = _a.emit;\n      var adapter = {\n        hasClass: function (className) {\n          return rootEl.hasClass(className);\n        },\n        addClass: function (className) {\n          return rootEl.addClass(className);\n        },\n        removeClass: function (className) {\n          return rootEl.removeClass(className);\n        },\n        setStyle: function (property, value) {\n          return rootEl.setStyle(property, value);\n        },\n        getTopAppBarHeight: function () {\n          var _a;\n\n          return ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.clientHeight) || 0;\n        },\n        notifyNavigationIconClicked: function () {\n          return emit('onNav', {});\n        },\n        getViewportScrollY: function () {\n          var target = scrollTargetRef.current;\n          return target ? target['pageYOffset' in target ? 'pageYOffset' : 'scrollTop'] : 0;\n        },\n        getTotalActionItems: function () {\n          return rootEl.ref ? rootEl.ref.querySelectorAll(MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR).length : 0;\n        }\n      };\n      var foundation;\n\n      if (props.short) {\n        foundation = new MDCShortTopAppBarFoundation(adapter);\n      } else if (props.fixed) {\n        foundation = new MDCFixedTopAppBarFoundation(adapter);\n      } else {\n        foundation = new MDCTopAppBarFoundation(adapter);\n      }\n\n      return foundation;\n    }\n  }),\n      foundation = _a.foundation,\n      elements = __rest(_a, [\"foundation\"]);\n\n  var rootEl = elements.rootEl;\n  useEffect(function () {\n    var _a, _b;\n\n    var target = props.scrollTarget || ((_b = (_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView) || window;\n    var handleTargetScroll = foundation.handleTargetScroll.bind(foundation);\n    target.addEventListener('scroll', handleTargetScroll);\n    scrollTargetRef.current = target;\n    return function () {\n      target.removeEventListener('scroll', handleTargetScroll);\n    };\n  }, [props.scrollTarget, scrollTargetRef, foundation, rootEl.ref]);\n  useEffect(function () {\n    var _a, _b;\n\n    navIconRef.current = ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector(MDCTopAppBarFoundation.strings.NAVIGATION_ICON_SELECTOR)) || null;\n    var handler = foundation.handleNavigationClick.bind(foundation);\n    (_b = navIconRef.current) === null || _b === void 0 ? void 0 : _b.addEventListener('click', handler);\n    return function () {\n      var _a;\n\n      (_a = navIconRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('click', handler);\n    };\n  }, [rootEl.ref, foundation]); // The Top App Bar sets these values in its constructor...\n  // Reinit them after mount\n\n  useEffect(function () {\n    // @ts-ignore\n    foundation.lastScrollPosition_ = foundation.adapter_.getViewportScrollY(); // @ts-ignore\n\n    foundation.topAppBarHeight_ = foundation.adapter_.getTopAppBarHeight();\n  }, [foundation]);\n  return __assign({\n    foundation: foundation\n  }, elements);\n};","map":{"version":3,"sources":["/Users/vycos-zen/git/molitio-workspace/molitio-ui/node_modules/@rmwc/top-app-bar/next/foundation.js"],"names":["__assign","__rest","useEffect","useRef","useFoundation","MDCTopAppBarFoundation","MDCFixedTopAppBarFoundation","MDCShortTopAppBarFoundation","useTopAppBarFoundation","props","scrollTargetRef","navIconRef","_a","elements","rootEl","foundation","emit","adapter","hasClass","className","addClass","removeClass","setStyle","property","value","getTopAppBarHeight","ref","clientHeight","notifyNavigationIconClicked","getViewportScrollY","target","current","getTotalActionItems","querySelectorAll","strings","ACTION_ITEM_SELECTOR","length","short","fixed","_b","scrollTarget","ownerDocument","defaultView","window","handleTargetScroll","bind","addEventListener","removeEventListener","querySelector","NAVIGATION_ICON_SELECTOR","handler","handleNavigationClick","lastScrollPosition_","adapter_","topAppBarHeight_"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCTopAppBarFoundation, MDCFixedTopAppBarFoundation, MDCShortTopAppBarFoundation } from '@material/top-app-bar';\nexport var useTopAppBarFoundation = function (props) {\n    var scrollTargetRef = useRef(null);\n    var navIconRef = useRef(null);\n    var _a = useFoundation({\n        props: props,\n        elements: {\n            rootEl: true\n        },\n        foundation: function (_a) {\n            var rootEl = _a.rootEl, emit = _a.emit;\n            var adapter = {\n                hasClass: function (className) { return rootEl.hasClass(className); },\n                addClass: function (className) { return rootEl.addClass(className); },\n                removeClass: function (className) { return rootEl.removeClass(className); },\n                setStyle: function (property, value) {\n                    return rootEl.setStyle(property, value);\n                },\n                getTopAppBarHeight: function () { var _a; return ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.clientHeight) || 0; },\n                notifyNavigationIconClicked: function () { return emit('onNav', {}); },\n                getViewportScrollY: function () {\n                    var target = scrollTargetRef.current;\n                    return target\n                        ? target['pageYOffset' in target ? 'pageYOffset' : 'scrollTop']\n                        : 0;\n                },\n                getTotalActionItems: function () {\n                    return rootEl.ref\n                        ? rootEl.ref.querySelectorAll(MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR).length\n                        : 0;\n                }\n            };\n            var foundation;\n            if (props.short) {\n                foundation = new MDCShortTopAppBarFoundation(adapter);\n            }\n            else if (props.fixed) {\n                foundation = new MDCFixedTopAppBarFoundation(adapter);\n            }\n            else {\n                foundation = new MDCTopAppBarFoundation(adapter);\n            }\n            return foundation;\n        }\n    }), foundation = _a.foundation, elements = __rest(_a, [\"foundation\"]);\n    var rootEl = elements.rootEl;\n    useEffect(function () {\n        var _a, _b;\n        var target = props.scrollTarget || ((_b = (_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView) || window;\n        var handleTargetScroll = foundation.handleTargetScroll.bind(foundation);\n        target.addEventListener('scroll', handleTargetScroll);\n        scrollTargetRef.current = target;\n        return function () {\n            target.removeEventListener('scroll', handleTargetScroll);\n        };\n    }, [props.scrollTarget, scrollTargetRef, foundation, rootEl.ref]);\n    useEffect(function () {\n        var _a, _b;\n        navIconRef.current =\n            ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector(MDCTopAppBarFoundation.strings.NAVIGATION_ICON_SELECTOR)) || null;\n        var handler = foundation.handleNavigationClick.bind(foundation);\n        (_b = navIconRef.current) === null || _b === void 0 ? void 0 : _b.addEventListener('click', handler);\n        return function () {\n            var _a;\n            (_a = navIconRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('click', handler);\n        };\n    }, [rootEl.ref, foundation]);\n    // The Top App Bar sets these values in its constructor...\n    // Reinit them after mount\n    useEffect(function () {\n        // @ts-ignore\n        foundation.lastScrollPosition_ = foundation.adapter_.getViewportScrollY();\n        // @ts-ignore\n        foundation.topAppBarHeight_ = foundation.adapter_.getTopAppBarHeight();\n    }, [foundation]);\n    return __assign({ foundation: foundation }, elements);\n};\n"]},"metadata":{},"sourceType":"module"}