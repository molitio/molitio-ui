{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { cssClasses, strings } from './constants';\nimport { MDCFixedTopAppBarFoundation } from './fixed/foundation';\nimport { MDCShortTopAppBarFoundation } from './short/foundation';\nimport { MDCTopAppBarFoundation } from './standard/foundation';\n\nvar MDCTopAppBar =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTopAppBar, _super);\n\n  function MDCTopAppBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTopAppBar.attachTo = function (root) {\n    return new MDCTopAppBar(root);\n  };\n\n  MDCTopAppBar.prototype.initialize = function (rippleFactory) {\n    if (rippleFactory === void 0) {\n      rippleFactory = function (el) {\n        return MDCRipple.attachTo(el);\n      };\n    }\n\n    this.navIcon_ = this.root_.querySelector(strings.NAVIGATION_ICON_SELECTOR); // Get all icons in the toolbar and instantiate the ripples\n\n    var icons = [].slice.call(this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR));\n\n    if (this.navIcon_) {\n      icons.push(this.navIcon_);\n    }\n\n    this.iconRipples_ = icons.map(function (icon) {\n      var ripple = rippleFactory(icon);\n      ripple.unbounded = true;\n      return ripple;\n    });\n    this.scrollTarget_ = window;\n  };\n\n  MDCTopAppBar.prototype.initialSyncWithDOM = function () {\n    this.handleNavigationClick_ = this.foundation_.handleNavigationClick.bind(this.foundation_);\n    this.handleWindowResize_ = this.foundation_.handleWindowResize.bind(this.foundation_);\n    this.handleTargetScroll_ = this.foundation_.handleTargetScroll.bind(this.foundation_);\n    this.scrollTarget_.addEventListener('scroll', this.handleTargetScroll_);\n\n    if (this.navIcon_) {\n      this.navIcon_.addEventListener('click', this.handleNavigationClick_);\n    }\n\n    var isFixed = this.root_.classList.contains(cssClasses.FIXED_CLASS);\n    var isShort = this.root_.classList.contains(cssClasses.SHORT_CLASS);\n\n    if (!isShort && !isFixed) {\n      window.addEventListener('resize', this.handleWindowResize_);\n    }\n  };\n\n  MDCTopAppBar.prototype.destroy = function () {\n    this.iconRipples_.forEach(function (iconRipple) {\n      return iconRipple.destroy();\n    });\n    this.scrollTarget_.removeEventListener('scroll', this.handleTargetScroll_);\n\n    if (this.navIcon_) {\n      this.navIcon_.removeEventListener('click', this.handleNavigationClick_);\n    }\n\n    var isFixed = this.root_.classList.contains(cssClasses.FIXED_CLASS);\n    var isShort = this.root_.classList.contains(cssClasses.SHORT_CLASS);\n\n    if (!isShort && !isFixed) {\n      window.removeEventListener('resize', this.handleWindowResize_);\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  MDCTopAppBar.prototype.setScrollTarget = function (target) {\n    // Remove scroll handler from the previous scroll target\n    this.scrollTarget_.removeEventListener('scroll', this.handleTargetScroll_);\n    this.scrollTarget_ = target; // Initialize scroll handler on the new scroll target\n\n    this.handleTargetScroll_ = this.foundation_.handleTargetScroll.bind(this.foundation_);\n    this.scrollTarget_.addEventListener('scroll', this.handleTargetScroll_);\n  };\n\n  MDCTopAppBar.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      setStyle: function (property, value) {\n        return _this.root_.style.setProperty(property, value);\n      },\n      getTopAppBarHeight: function () {\n        return _this.root_.clientHeight;\n      },\n      notifyNavigationIconClicked: function () {\n        return _this.emit(strings.NAVIGATION_EVENT, {});\n      },\n      getViewportScrollY: function () {\n        var win = _this.scrollTarget_;\n        var el = _this.scrollTarget_;\n        return win.pageYOffset !== undefined ? win.pageYOffset : el.scrollTop;\n      },\n      getTotalActionItems: function () {\n        return _this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR).length;\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    var foundation;\n\n    if (this.root_.classList.contains(cssClasses.SHORT_CLASS)) {\n      foundation = new MDCShortTopAppBarFoundation(adapter);\n    } else if (this.root_.classList.contains(cssClasses.FIXED_CLASS)) {\n      foundation = new MDCFixedTopAppBarFoundation(adapter);\n    } else {\n      foundation = new MDCTopAppBarFoundation(adapter);\n    }\n\n    return foundation;\n  };\n\n  return MDCTopAppBar;\n}(MDCComponent);\n\nexport { MDCTopAppBar };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { cssClasses, strings } from './constants';\nimport { MDCFixedTopAppBarFoundation } from './fixed/foundation';\nimport { MDCShortTopAppBarFoundation } from './short/foundation';\nimport { MDCTopAppBarFoundation } from './standard/foundation';\nvar MDCTopAppBar = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCTopAppBar, _super);\n    function MDCTopAppBar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTopAppBar.attachTo = function (root) {\n        return new MDCTopAppBar(root);\n    };\n    MDCTopAppBar.prototype.initialize = function (rippleFactory) {\n        if (rippleFactory === void 0) { rippleFactory = function (el) { return MDCRipple.attachTo(el); }; }\n        this.navIcon_ = this.root_.querySelector(strings.NAVIGATION_ICON_SELECTOR);\n        // Get all icons in the toolbar and instantiate the ripples\n        var icons = [].slice.call(this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR));\n        if (this.navIcon_) {\n            icons.push(this.navIcon_);\n        }\n        this.iconRipples_ = icons.map(function (icon) {\n            var ripple = rippleFactory(icon);\n            ripple.unbounded = true;\n            return ripple;\n        });\n        this.scrollTarget_ = window;\n    };\n    MDCTopAppBar.prototype.initialSyncWithDOM = function () {\n        this.handleNavigationClick_ = this.foundation_.handleNavigationClick.bind(this.foundation_);\n        this.handleWindowResize_ = this.foundation_.handleWindowResize.bind(this.foundation_);\n        this.handleTargetScroll_ = this.foundation_.handleTargetScroll.bind(this.foundation_);\n        this.scrollTarget_.addEventListener('scroll', this.handleTargetScroll_);\n        if (this.navIcon_) {\n            this.navIcon_.addEventListener('click', this.handleNavigationClick_);\n        }\n        var isFixed = this.root_.classList.contains(cssClasses.FIXED_CLASS);\n        var isShort = this.root_.classList.contains(cssClasses.SHORT_CLASS);\n        if (!isShort && !isFixed) {\n            window.addEventListener('resize', this.handleWindowResize_);\n        }\n    };\n    MDCTopAppBar.prototype.destroy = function () {\n        this.iconRipples_.forEach(function (iconRipple) { return iconRipple.destroy(); });\n        this.scrollTarget_.removeEventListener('scroll', this.handleTargetScroll_);\n        if (this.navIcon_) {\n            this.navIcon_.removeEventListener('click', this.handleNavigationClick_);\n        }\n        var isFixed = this.root_.classList.contains(cssClasses.FIXED_CLASS);\n        var isShort = this.root_.classList.contains(cssClasses.SHORT_CLASS);\n        if (!isShort && !isFixed) {\n            window.removeEventListener('resize', this.handleWindowResize_);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    MDCTopAppBar.prototype.setScrollTarget = function (target) {\n        // Remove scroll handler from the previous scroll target\n        this.scrollTarget_.removeEventListener('scroll', this.handleTargetScroll_);\n        this.scrollTarget_ = target;\n        // Initialize scroll handler on the new scroll target\n        this.handleTargetScroll_ =\n            this.foundation_.handleTargetScroll.bind(this.foundation_);\n        this.scrollTarget_.addEventListener('scroll', this.handleTargetScroll_);\n    };\n    MDCTopAppBar.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            setStyle: function (property, value) { return _this.root_.style.setProperty(property, value); },\n            getTopAppBarHeight: function () { return _this.root_.clientHeight; },\n            notifyNavigationIconClicked: function () { return _this.emit(strings.NAVIGATION_EVENT, {}); },\n            getViewportScrollY: function () {\n                var win = _this.scrollTarget_;\n                var el = _this.scrollTarget_;\n                return win.pageYOffset !== undefined ? win.pageYOffset : el.scrollTop;\n            },\n            getTotalActionItems: function () { return _this.root_.querySelectorAll(strings.ACTION_ITEM_SELECTOR).length; },\n        };\n        // tslint:enable:object-literal-sort-keys\n        var foundation;\n        if (this.root_.classList.contains(cssClasses.SHORT_CLASS)) {\n            foundation = new MDCShortTopAppBarFoundation(adapter);\n        }\n        else if (this.root_.classList.contains(cssClasses.FIXED_CLASS)) {\n            foundation = new MDCFixedTopAppBarFoundation(adapter);\n        }\n        else {\n            foundation = new MDCTopAppBarFoundation(adapter);\n        }\n        return foundation;\n    };\n    return MDCTopAppBar;\n}(MDCComponent));\nexport { MDCTopAppBar };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}