{"ast":null,"code":"var _jsxFileName = \"/Users/vycos-zen/git/molitio-workspace/molitio-ui/src/components/pages/LandingPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Circle {\n  constructor(x, y, rad) {\n    this.x = void 0;\n    this.y = void 0;\n    this.rad = void 0;\n    this.x = x;\n    this.y = y;\n    this.rad = rad;\n  }\n\n}\n\nconst findPoint = (cx, cy, rad, cornerGrad) => {\n  const cornerRad = cornerGrad * Math.PI / 180;\n  const nx = Math.cos(cornerRad) * rad + cx;\n  const ny = Math.sin(cornerRad) * rad + cy;\n  return {\n    x: nx,\n    y: ny\n  };\n};\n\nfunction LandingPage() {\n  _s();\n\n  const [circles, setCircles] = useState(() => {\n    createPattern();\n  }, [circles]);\n  const rad = 100;\n  const centerCircle = new Circle(400, 400, 100);\n\n  const createPattern = () => {\n    const circleBuilder = [];\n    circleBuilder.push(centerCircle);\n\n    for (let i = 0; i <= 6; i = i++) {\n      console.log(i);\n      const cornerGrad = i * 60;\n      const point = findPoint(centerCircle.x, centerCircle.y, centerCircle.rad, cornerGrad);\n      const circle = new Circle(point.x, point.y, rad);\n      console.log(circle.x);\n      circleBuilder.push(circle);\n    }\n\n    setCircles(circleBuilder);\n  };\n\n  if (circles.length === 0) {\n    createPattern();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [circles.length, circles.map(circle => {\n      {\n        circle.x;\n      }\n      {\n        circle.y;\n      }\n\n      /*#__PURE__*/\n      _jsxDEV(\"svg\", {\n        viewBox: \"0 0 1000 1000\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: circle.x,\n          cy: circle.y,\n          r: circle.rad,\n          stroke: \"blue\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Landing page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LandingPage, \"RSlE1W1PzpUALRPIFHlp0YOuFis=\");\n\n_c = LandingPage;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["/Users/vycos-zen/git/molitio-workspace/molitio-ui/src/components/pages/LandingPage.tsx"],"names":["React","useState","Circle","constructor","x","y","rad","findPoint","cx","cy","cornerGrad","cornerRad","Math","PI","nx","cos","ny","sin","LandingPage","circles","setCircles","createPattern","centerCircle","circleBuilder","push","i","console","log","point","circle","length","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nclass Circle {\n    x: number;\n    y: number;\n    rad: number;\n    constructor(x: number, y: number, rad: number) {\n        this.x = x;\n        this.y = y;\n        this.rad = rad;\n    }\n}\n\nconst findPoint = (cx: number, cy: number, rad: number, cornerGrad: number) => {\n    const cornerRad = (cornerGrad * Math.PI) / 180;\n    const nx = Math.cos(cornerRad) * rad + cx;\n    const ny = Math.sin(cornerRad) * rad + cy;\n    return { x: nx, y: ny };\n};\n\nfunction LandingPage(): JSX.Element {\n    const [circles, setCircles] = useState<Circle[] | []>(() => {\n        createPattern();\n    }, [circles]);\n    const rad = 100;\n    const centerCircle = new Circle(400, 400, 100);\n\n    const createPattern = () => {\n        const circleBuilder: Circle[] = [];\n        circleBuilder.push(centerCircle);\n\n        for (let i = 0; i <= 6; i = i++) {\n            console.log(i);\n            const cornerGrad = i * 60;\n            const point = findPoint(centerCircle.x, centerCircle.y, centerCircle.rad, cornerGrad);\n            const circle = new Circle(point.x, point.y, rad);\n            console.log(circle.x);\n            circleBuilder.push(circle);\n        }\n        setCircles(circleBuilder);\n    };\n    if (circles.length === 0) {\n        createPattern();\n    }\n\n    return (\n        <>\n            {circles.length}\n            {circles.map((circle) => {\n                {\n                    circle.x;\n                }\n                {\n                    circle.y;\n                }\n                <svg viewBox=\"0 0 1000 1000\">\n                    {/* center circle */}\n                    <circle cx={circle.x} cy={circle.y} r={circle.rad} stroke=\"blue\" fill=\"none\" />\n                </svg>;\n            })}\n            <div>Landing page</div>\n        </>\n    );\n}\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}