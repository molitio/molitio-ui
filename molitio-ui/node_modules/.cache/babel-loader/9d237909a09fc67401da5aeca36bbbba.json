{"ast":null,"code":"import { __assign } from \"tslib\";\nexport var deprecationWarning = function (message) {\n  if (process && process.env && process.env.NODE_ENV !== 'production') {\n    console.warn(\"RMWC Deprecation Warning: \" + message);\n  }\n};\nexport var handleDeprecations = function (props, deprecate, displayName) {\n  props = __assign({}, props);\n\n  for (var oldPropName in deprecate) {\n    var newProp = deprecate[oldPropName];\n    var newPropName = void 0;\n\n    var transformProp = function (value) {\n      return value;\n    };\n\n    if (Array.isArray(newProp)) {\n      newPropName = newProp[0];\n      transformProp = newProp[1];\n    } else {\n      newPropName = newProp;\n    }\n\n    if (props[oldPropName] !== undefined) {\n      if (newPropName === '') {\n        /* istanbul ignore next */\n        deprecationWarning((displayName || '') + \" component prop '\" + oldPropName + \"' has been removed from and is no longer a valid prop.\");\n      } else {\n        props[newPropName] = transformProp(props[oldPropName]);\n        var propTransformMessage = '';\n\n        if (props[newPropName] !== props[oldPropName]) {\n          propTransformMessage = \" The old value has also been converted from '\" + props[oldPropName] + \"' to '\" + props[newPropName] + \"'\";\n        }\n        /* istanbul ignore next */\n\n\n        deprecationWarning((displayName || '') + \" component prop '\" + oldPropName + \"' has been replaced with '\" + newPropName + \"'. \" + propTransformMessage);\n      }\n\n      delete props[oldPropName];\n    }\n  }\n\n  return props;\n};","map":{"version":3,"sources":["/Users/vycos-zen/git/molitio-workspace/molitio-ui/node_modules/@rmwc/base/next/utils/deprecation.js"],"names":["__assign","deprecationWarning","message","process","env","NODE_ENV","console","warn","handleDeprecations","props","deprecate","displayName","oldPropName","newProp","newPropName","transformProp","value","Array","isArray","undefined","propTransformMessage"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,IAAIC,kBAAkB,GAAG,UAAUC,OAAV,EAAmB;AAC/C,MAAIC,OAAO,IAAIA,OAAO,CAACC,GAAnB,IAA0BD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvD,EAAqE;AACjEC,IAAAA,OAAO,CAACC,IAAR,CAAa,+BAA+BL,OAA5C;AACH;AACJ,CAJM;AAKP,OAAO,IAAIM,kBAAkB,GAAG,UAAUC,KAAV,EAAiBC,SAAjB,EAA4BC,WAA5B,EAAyC;AACrEF,EAAAA,KAAK,GAAGT,QAAQ,CAAC,EAAD,EAAKS,KAAL,CAAhB;;AACA,OAAK,IAAIG,WAAT,IAAwBF,SAAxB,EAAmC;AAC/B,QAAIG,OAAO,GAAGH,SAAS,CAACE,WAAD,CAAvB;AACA,QAAIE,WAAW,GAAG,KAAK,CAAvB;;AACA,QAAIC,aAAa,GAAG,UAAUC,KAAV,EAAiB;AAAE,aAAOA,KAAP;AAAe,KAAtD;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcL,OAAd,CAAJ,EAA4B;AACxBC,MAAAA,WAAW,GAAGD,OAAO,CAAC,CAAD,CAArB;AACAE,MAAAA,aAAa,GAAGF,OAAO,CAAC,CAAD,CAAvB;AACH,KAHD,MAIK;AACDC,MAAAA,WAAW,GAAGD,OAAd;AACH;;AACD,QAAIJ,KAAK,CAACG,WAAD,CAAL,KAAuBO,SAA3B,EAAsC;AAClC,UAAIL,WAAW,KAAK,EAApB,EAAwB;AACpB;AACAb,QAAAA,kBAAkB,CAAC,CAACU,WAAW,IAC3B,EADe,IACT,mBADS,GACaC,WADb,GAC2B,wDAD5B,CAAlB;AAEH,OAJD,MAKK;AACDH,QAAAA,KAAK,CAACK,WAAD,CAAL,GAAqBC,aAAa,CAACN,KAAK,CAACG,WAAD,CAAN,CAAlC;AACA,YAAIQ,oBAAoB,GAAG,EAA3B;;AACA,YAAIX,KAAK,CAACK,WAAD,CAAL,KAAuBL,KAAK,CAACG,WAAD,CAAhC,EAA+C;AAC3CQ,UAAAA,oBAAoB,GAAG,kDAAkDX,KAAK,CAACG,WAAD,CAAvD,GAAuE,QAAvE,GAAkFH,KAAK,CAACK,WAAD,CAAvF,GAAuG,GAA9H;AACH;AACD;;;AACAb,QAAAA,kBAAkB,CAAC,CAACU,WAAW,IAC3B,EADe,IACT,mBADS,GACaC,WADb,GAC2B,4BAD3B,GAC0DE,WAD1D,GACwE,KADxE,GACgFM,oBADjF,CAAlB;AAEH;;AACD,aAAOX,KAAK,CAACG,WAAD,CAAZ;AACH;AACJ;;AACD,SAAOH,KAAP;AACH,CAjCM","sourcesContent":["import { __assign } from \"tslib\";\nexport var deprecationWarning = function (message) {\n    if (process && process.env && process.env.NODE_ENV !== 'production') {\n        console.warn(\"RMWC Deprecation Warning: \" + message);\n    }\n};\nexport var handleDeprecations = function (props, deprecate, displayName) {\n    props = __assign({}, props);\n    for (var oldPropName in deprecate) {\n        var newProp = deprecate[oldPropName];\n        var newPropName = void 0;\n        var transformProp = function (value) { return value; };\n        if (Array.isArray(newProp)) {\n            newPropName = newProp[0];\n            transformProp = newProp[1];\n        }\n        else {\n            newPropName = newProp;\n        }\n        if (props[oldPropName] !== undefined) {\n            if (newPropName === '') {\n                /* istanbul ignore next */\n                deprecationWarning((displayName ||\n                    '') + \" component prop '\" + oldPropName + \"' has been removed from and is no longer a valid prop.\");\n            }\n            else {\n                props[newPropName] = transformProp(props[oldPropName]);\n                var propTransformMessage = '';\n                if (props[newPropName] !== props[oldPropName]) {\n                    propTransformMessage = \" The old value has also been converted from '\" + props[oldPropName] + \"' to '\" + props[newPropName] + \"'\";\n                }\n                /* istanbul ignore next */\n                deprecationWarning((displayName ||\n                    '') + \" component prop '\" + oldPropName + \"' has been replaced with '\" + newPropName + \"'. \" + propTransformMessage);\n            }\n            delete props[oldPropName];\n        }\n    }\n    return props;\n};\n"]},"metadata":{},"sourceType":"module"}