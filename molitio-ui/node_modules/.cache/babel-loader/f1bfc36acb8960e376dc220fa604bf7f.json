{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { useProviderContext } from '@rmwc/provider';\nimport { classNames, Tag, createComponent, getDisplayName } from '@rmwc/base';\n/**\n * Given content, tries to figure out an appropriate strategy for it\n */\n\nvar processAutoStrategy = function (content) {\n  // check for URLS\n  if (typeof content === 'string' && content.includes('/')) {\n    return 'url';\n  } // handle JSX components\n\n\n  if (React.isValidElement(content)) {\n    return 'component';\n  } // we don't know what it is, default to ligature for compat with material icons\n\n\n  return 'ligature';\n};\n/**\n * Get the actual icon strategy to use\n */\n\n\nexport var getIconStrategy = function (content, strategy, providerStrategy) {\n  strategy = strategy || providerStrategy || 'auto';\n\n  if (strategy === 'auto') {\n    return processAutoStrategy(content);\n  }\n\n  return strategy;\n};\n\nvar renderLigature = function (_a) {\n  var content = _a.content,\n      rest = __rest(_a, [\"content\"]);\n\n  return React.createElement(IconRoot, __assign({}, rest), content);\n};\n\nvar renderClassName = function (_a) {\n  var content = _a.content,\n      rest = __rest(_a, [\"content\"]);\n\n  return React.createElement(IconRoot, __assign({}, rest));\n};\n\nvar renderUrl = function (_a) {\n  var content = _a.content,\n      rest = __rest(_a, [\"content\"]);\n\n  return React.createElement(IconRoot, __assign({}, rest, {\n    style: __assign(__assign({}, rest.style), {\n      backgroundImage: \"url(\" + content + \")\"\n    })\n  }));\n};\n\nvar renderComponent = function (_a) {\n  var content = _a.content,\n      rest = __rest(_a, [\"content\"]);\n\n  if (content.type === 'svg') {\n    var _b = content.props,\n        children = _b.children,\n        svgRest = __rest(_b, [\"children\"]);\n\n    return React.createElement(IconRoot, __assign({}, svgRest, rest, {\n      tag: \"svg\"\n    }), children);\n  }\n\n  return React.createElement(IconRoot, __assign({}, rest), content);\n};\n\nvar iconRenderMap = {\n  ligature: renderLigature,\n  className: renderClassName,\n  url: renderUrl,\n  component: renderComponent,\n  auto: undefined\n};\n\nvar buildIconOptions = function (icon) {\n  if (React.isValidElement(icon) || icon && typeof icon !== 'object') {\n    return {\n      icon: icon\n    };\n  }\n\n  return icon;\n};\n\nvar IconRoot = React.forwardRef(function IconRoot(props, ref) {\n  return React.createElement(Tag, __assign({\n    tag: \"i\"\n  }, props, {\n    ref: ref\n  }));\n});\n/** An Icon component. Most of these options can be set once globally, read the documentation on Provider for more info. */\n\nexport var Icon = createComponent(function (_a, ref) {\n  var _b;\n\n  var icon = _a.icon,\n      rest = __rest(_a, [\"icon\"]);\n\n  var providerContext = useProviderContext(); // Build icon options object\n\n  var _c = __assign({}, buildIconOptions(icon)),\n      content = _c.icon,\n      strategy = _c.strategy,\n      prefix = _c.prefix,\n      basename = _c.basename,\n      render = _c.render,\n      size = _c.size,\n      optionsRest = __rest(_c, [\"icon\", \"strategy\", \"prefix\", \"basename\", \"render\", \"size\"]); // Get provider options\n\n\n  var _d = providerContext.icon || {},\n      _e = _d.basename,\n      providerBasename = _e === void 0 ? null : _e,\n      _f = _d.prefix,\n      providerPrefix = _f === void 0 ? null : _f,\n      _g = _d.strategy,\n      providerStrategy = _g === void 0 ? null : _g,\n      _h = _d.render,\n      providerRender = _h === void 0 ? null : _h;\n\n  var contentToUse = content;\n  var strategyToUse = getIconStrategy(contentToUse, strategy || null, providerStrategy || null);\n  var prefixToUse = prefix || providerPrefix;\n  var basenameToUse = basename === undefined ? providerBasename : basename;\n  var iconClassName = strategyToUse === 'className' && typeof content === 'string' ? \"\" + String(prefixToUse) + content : null;\n  var rendererFromMap = !!strategyToUse && iconRenderMap[strategyToUse]; // For some reason TS thinks the render method will return undefined...\n\n  var renderToUse = strategyToUse === 'custom' ? render || providerRender : rendererFromMap || null;\n\n  if (!renderToUse) {\n    console.error(\"Icon: rendering not implemented for \" + String(strategyToUse) + \".\");\n    return null;\n  }\n\n  var rendered = renderToUse(__assign(__assign(__assign({}, rest), optionsRest), {\n    ref: ref,\n    content: contentToUse,\n    className: classNames('rmwc-icon', \"rmwc-icon--\" + strategyToUse, basenameToUse, rest.className, optionsRest.className, iconClassName, (_b = {}, _b[\"rmwc-icon--size-\" + (size || '')] = !!size, _b))\n  }));\n  var childDisplayName = getDisplayName(rendered.props.children);\n\n  if (childDisplayName.includes('Avatar') || childDisplayName.includes('Icon')) {\n    return React.cloneElement(rendered.props.children, __assign(__assign(__assign({}, rendered.props.children.props), rendered.props), {\n      ref: ref,\n      // prevents an infinite loop\n      children: rendered.props.children.props.children,\n      className: classNames(rendered.props.className, rendered.props.children.props.className)\n    }));\n  }\n\n  return rendered;\n});\nIcon.displayName = 'Icon';","map":{"version":3,"sources":["/Users/vycos-zen/git/molitio-workspace/molitio-ui/node_modules/@rmwc/icon/next/index.js"],"names":["__assign","__rest","React","useProviderContext","classNames","Tag","createComponent","getDisplayName","processAutoStrategy","content","includes","isValidElement","getIconStrategy","strategy","providerStrategy","renderLigature","_a","rest","createElement","IconRoot","renderClassName","renderUrl","style","backgroundImage","renderComponent","type","_b","props","children","svgRest","tag","iconRenderMap","ligature","className","url","component","auto","undefined","buildIconOptions","icon","forwardRef","ref","Icon","providerContext","_c","prefix","basename","render","size","optionsRest","_d","_e","providerBasename","_f","providerPrefix","_g","_h","providerRender","contentToUse","strategyToUse","prefixToUse","basenameToUse","iconClassName","String","rendererFromMap","renderToUse","console","error","rendered","childDisplayName","cloneElement","displayName"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { useProviderContext } from '@rmwc/provider';\nimport { classNames, Tag, createComponent, getDisplayName } from '@rmwc/base';\n/**\n * Given content, tries to figure out an appropriate strategy for it\n */\nvar processAutoStrategy = function (content) {\n    // check for URLS\n    if (typeof content === 'string' && content.includes('/')) {\n        return 'url';\n    }\n    // handle JSX components\n    if (React.isValidElement(content)) {\n        return 'component';\n    }\n    // we don't know what it is, default to ligature for compat with material icons\n    return 'ligature';\n};\n/**\n * Get the actual icon strategy to use\n */\nexport var getIconStrategy = function (content, strategy, providerStrategy) {\n    strategy = strategy || providerStrategy || 'auto';\n    if (strategy === 'auto') {\n        return processAutoStrategy(content);\n    }\n    return strategy;\n};\nvar renderLigature = function (_a) {\n    var content = _a.content, rest = __rest(_a, [\"content\"]);\n    return (React.createElement(IconRoot, __assign({}, rest), content));\n};\nvar renderClassName = function (_a) {\n    var content = _a.content, rest = __rest(_a, [\"content\"]);\n    return React.createElement(IconRoot, __assign({}, rest));\n};\nvar renderUrl = function (_a) {\n    var content = _a.content, rest = __rest(_a, [\"content\"]);\n    return (React.createElement(IconRoot, __assign({}, rest, { style: __assign(__assign({}, rest.style), { backgroundImage: \"url(\" + content + \")\" }) })));\n};\nvar renderComponent = function (_a) {\n    var content = _a.content, rest = __rest(_a, [\"content\"]);\n    if (content.type === 'svg') {\n        var _b = content.props, children = _b.children, svgRest = __rest(_b, [\"children\"]);\n        return (React.createElement(IconRoot, __assign({}, svgRest, rest, { tag: \"svg\" }), children));\n    }\n    return React.createElement(IconRoot, __assign({}, rest), content);\n};\nvar iconRenderMap = {\n    ligature: renderLigature,\n    className: renderClassName,\n    url: renderUrl,\n    component: renderComponent,\n    auto: undefined\n};\nvar buildIconOptions = function (icon) {\n    if (React.isValidElement(icon) || (icon && typeof icon !== 'object')) {\n        return {\n            icon: icon\n        };\n    }\n    return icon;\n};\nvar IconRoot = React.forwardRef(function IconRoot(props, ref) {\n    return React.createElement(Tag, __assign({ tag: \"i\" }, props, { ref: ref }));\n});\n/** An Icon component. Most of these options can be set once globally, read the documentation on Provider for more info. */\nexport var Icon = createComponent(function (_a, ref) {\n    var _b;\n    var icon = _a.icon, rest = __rest(_a, [\"icon\"]);\n    var providerContext = useProviderContext();\n    // Build icon options object\n    var _c = __assign({}, buildIconOptions(icon)), content = _c.icon, strategy = _c.strategy, prefix = _c.prefix, basename = _c.basename, render = _c.render, size = _c.size, optionsRest = __rest(_c, [\"icon\", \"strategy\", \"prefix\", \"basename\", \"render\", \"size\"]);\n    // Get provider options\n    var _d = providerContext.icon || {}, _e = _d.basename, providerBasename = _e === void 0 ? null : _e, _f = _d.prefix, providerPrefix = _f === void 0 ? null : _f, _g = _d.strategy, providerStrategy = _g === void 0 ? null : _g, _h = _d.render, providerRender = _h === void 0 ? null : _h;\n    var contentToUse = content;\n    var strategyToUse = getIconStrategy(contentToUse, strategy || null, providerStrategy || null);\n    var prefixToUse = prefix || providerPrefix;\n    var basenameToUse = basename === undefined ? providerBasename : basename;\n    var iconClassName = strategyToUse === 'className' && typeof content === 'string'\n        ? \"\" + String(prefixToUse) + content\n        : null;\n    var rendererFromMap = !!strategyToUse && iconRenderMap[strategyToUse];\n    // For some reason TS thinks the render method will return undefined...\n    var renderToUse = strategyToUse === 'custom'\n        ? render || providerRender\n        : rendererFromMap || null;\n    if (!renderToUse) {\n        console.error(\"Icon: rendering not implemented for \" + String(strategyToUse) + \".\");\n        return null;\n    }\n    var rendered = renderToUse(__assign(__assign(__assign({}, rest), optionsRest), { ref: ref, content: contentToUse, className: classNames('rmwc-icon', \"rmwc-icon--\" + strategyToUse, basenameToUse, rest.className, optionsRest.className, iconClassName, (_b = {},\n            _b[\"rmwc-icon--size-\" + (size || '')] = !!size,\n            _b)) }));\n    var childDisplayName = getDisplayName(rendered.props.children);\n    if (childDisplayName.includes('Avatar') ||\n        childDisplayName.includes('Icon')) {\n        return React.cloneElement(rendered.props.children, __assign(__assign(__assign({}, rendered.props.children.props), rendered.props), { ref: ref, \n            // prevents an infinite loop\n            children: rendered.props.children.props.children, className: classNames(rendered.props.className, rendered.props.children.props.className) }));\n    }\n    return rendered;\n});\nIcon.displayName = 'Icon';\n"]},"metadata":{},"sourceType":"module"}