{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { useEffect } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCIconButtonToggleFoundation } from '@material/icon-button';\nexport var useIconButtonFoundation = function (props) {\n  var _a = useFoundation({\n    props: props,\n    elements: {\n      rootEl: true\n    },\n    foundation: function (_a) {\n      var rootEl = _a.rootEl,\n          emit = _a.emit;\n      return new MDCIconButtonToggleFoundation({\n        addClass: function (className) {\n          return rootEl.addClass(className);\n        },\n        removeClass: function (className) {\n          return rootEl.removeClass(className);\n        },\n        hasClass: function (className) {\n          return rootEl.hasClass(className);\n        },\n        setAttr: function (attrName, attrValue) {\n          return rootEl.setProp(attrName, attrValue);\n        },\n        notifyChange: function (evtData) {\n          return emit('onChange', evtData);\n        }\n      });\n    }\n  }),\n      foundation = _a.foundation,\n      elements = __rest(_a, [\"foundation\"]);\n\n  var rootEl = elements.rootEl;\n  var isOn = props.checked !== undefined ? props.checked : foundation.isOn();\n  useEffect(function () {\n    if (isOn !== foundation.isOn()) {\n      foundation.toggle(isOn);\n    }\n  }, [foundation, isOn]);\n\n  var handleClick = function (evt) {\n    var _a;\n\n    (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n    foundation.handleClick();\n  };\n\n  rootEl.setProp('onClick', handleClick, true);\n  return __assign({\n    isOn: isOn,\n    foundation: foundation\n  }, elements);\n};","map":{"version":3,"sources":["/Users/vycos-zen/git/molitio-workspace/molitio-ui/node_modules/@rmwc/icon-button/next/foundation.js"],"names":["__assign","__rest","useEffect","useFoundation","MDCIconButtonToggleFoundation","useIconButtonFoundation","props","_a","elements","rootEl","foundation","emit","addClass","className","removeClass","hasClass","setAttr","attrName","attrValue","setProp","notifyChange","evtData","isOn","checked","undefined","toggle","handleClick","evt","onClick","call"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,6BAAT,QAA8C,uBAA9C;AACA,OAAO,IAAIC,uBAAuB,GAAG,UAAUC,KAAV,EAAiB;AAClD,MAAIC,EAAE,GAAGJ,aAAa,CAAC;AACnBG,IAAAA,KAAK,EAAEA,KADY;AAEnBE,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFS;AAGnBC,IAAAA,UAAU,EAAE,UAAUH,EAAV,EAAc;AACtB,UAAIE,MAAM,GAAGF,EAAE,CAACE,MAAhB;AAAA,UAAwBE,IAAI,GAAGJ,EAAE,CAACI,IAAlC;AACA,aAAO,IAAIP,6BAAJ,CAAkC;AACrCQ,QAAAA,QAAQ,EAAE,UAAUC,SAAV,EAAqB;AAAE,iBAAOJ,MAAM,CAACG,QAAP,CAAgBC,SAAhB,CAAP;AAAoC,SADhC;AAErCC,QAAAA,WAAW,EAAE,UAAUD,SAAV,EAAqB;AAAE,iBAAOJ,MAAM,CAACK,WAAP,CAAmBD,SAAnB,CAAP;AAAuC,SAFtC;AAGrCE,QAAAA,QAAQ,EAAE,UAAUF,SAAV,EAAqB;AAAE,iBAAOJ,MAAM,CAACM,QAAP,CAAgBF,SAAhB,CAAP;AAAoC,SAHhC;AAIrCG,QAAAA,OAAO,EAAE,UAAUC,QAAV,EAAoBC,SAApB,EAA+B;AACpC,iBAAOT,MAAM,CAACU,OAAP,CAAeF,QAAf,EAAyBC,SAAzB,CAAP;AACH,SANoC;AAOrCE,QAAAA,YAAY,EAAE,UAAUC,OAAV,EAAmB;AAAE,iBAAOV,IAAI,CAAC,UAAD,EAAaU,OAAb,CAAX;AAAmC;AAPjC,OAAlC,CAAP;AASH;AAdkB,GAAD,CAAtB;AAAA,MAeIX,UAAU,GAAGH,EAAE,CAACG,UAfpB;AAAA,MAegCF,QAAQ,GAAGP,MAAM,CAACM,EAAD,EAAK,CAAC,YAAD,CAAL,CAfjD;;AAgBA,MAAIE,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AACA,MAAIa,IAAI,GAAGhB,KAAK,CAACiB,OAAN,KAAkBC,SAAlB,GAA8BlB,KAAK,CAACiB,OAApC,GAA8Cb,UAAU,CAACY,IAAX,EAAzD;AACApB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIoB,IAAI,KAAKZ,UAAU,CAACY,IAAX,EAAb,EAAgC;AAC5BZ,MAAAA,UAAU,CAACe,MAAX,CAAkBH,IAAlB;AACH;AACJ,GAJQ,EAIN,CAACZ,UAAD,EAAaY,IAAb,CAJM,CAAT;;AAKA,MAAII,WAAW,GAAG,UAAUC,GAAV,EAAe;AAC7B,QAAIpB,EAAJ;;AACA,KAACA,EAAE,GAAGD,KAAK,CAACsB,OAAZ,MAAyB,IAAzB,IAAiCrB,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACsB,IAAH,CAAQvB,KAAR,EAAeqB,GAAf,CAA1D;AACAjB,IAAAA,UAAU,CAACgB,WAAX;AACH,GAJD;;AAKAjB,EAAAA,MAAM,CAACU,OAAP,CAAe,SAAf,EAA0BO,WAA1B,EAAuC,IAAvC;AACA,SAAO1B,QAAQ,CAAC;AAAEsB,IAAAA,IAAI,EAAEA,IAAR;AAAcZ,IAAAA,UAAU,EAAEA;AAA1B,GAAD,EAAyCF,QAAzC,CAAf;AACH,CA/BM","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { useEffect } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCIconButtonToggleFoundation } from '@material/icon-button';\nexport var useIconButtonFoundation = function (props) {\n    var _a = useFoundation({\n        props: props,\n        elements: { rootEl: true },\n        foundation: function (_a) {\n            var rootEl = _a.rootEl, emit = _a.emit;\n            return new MDCIconButtonToggleFoundation({\n                addClass: function (className) { return rootEl.addClass(className); },\n                removeClass: function (className) { return rootEl.removeClass(className); },\n                hasClass: function (className) { return rootEl.hasClass(className); },\n                setAttr: function (attrName, attrValue) {\n                    return rootEl.setProp(attrName, attrValue);\n                },\n                notifyChange: function (evtData) { return emit('onChange', evtData); }\n            });\n        }\n    }), foundation = _a.foundation, elements = __rest(_a, [\"foundation\"]);\n    var rootEl = elements.rootEl;\n    var isOn = props.checked !== undefined ? props.checked : foundation.isOn();\n    useEffect(function () {\n        if (isOn !== foundation.isOn()) {\n            foundation.toggle(isOn);\n        }\n    }, [foundation, isOn]);\n    var handleClick = function (evt) {\n        var _a;\n        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n        foundation.handleClick();\n    };\n    rootEl.setProp('onClick', handleClick, true);\n    return __assign({ isOn: isOn, foundation: foundation }, elements);\n};\n"]},"metadata":{},"sourceType":"module"}